@page "/recuperar-password"
@inject AuthService AuthService
@inject NavigationManager Navigation
@inject IJSRuntime JSRuntime
@using GaleriaArteFrontend.Models
@using GaleriaArteFrontend.Services

<PageTitle>Recuperar Contraseña - Galería de Arte</PageTitle>

<div class="recovery-container">
    <div class="recovery-card">
        <div class="recovery-header">
            <h2>Recuperar Contraseña</h2>
            <p>Te enviaremos las instrucciones a tu correo</p>
        </div>

        <div class="recovery-form">
            @if (!solicitudEnviada)
            {
                <EditForm Model="recuperacionRequest" OnValidSubmit="HandleSolicitarRecuperacion">
                    <DataAnnotationsValidator />
                    
                    <div class="form-group">
                        <label for="correo">Correo Electrónico</label>
                        <InputText id="correo" @bind-Value="recuperacionRequest.Correo" 
                                  type="email" class="form-control" placeholder="Ingresa tu correo registrado" />
                        <ValidationMessage For="@(() => recuperacionRequest.Correo)" />
                        <div class="help-text">
                            <small>Ingresa el correo que usaste para registrarte</small>
                        </div>
                    </div>

                    @if (!string.IsNullOrEmpty(mensajeError))
                    {
                        <div class="alert alert-danger">
                            <i class="fas fa-exclamation-circle"></i>
                            @mensajeError
                        </div>
                    }

                    <button type="submit" class="btn btn-primary btn-recovery" disabled="@cargando">
                        @if (cargando)
                        {
                            <i class="fas fa-spinner fa-spin"></i>
                            <span>Enviando...</span>
                        }
                        else
                        {
                            <i class="fas fa-paper-plane"></i>
                            <span>Enviar Instrucciones</span>
                        }
                    </button>
                </EditForm>
            }
            else
            {
                <div class="success-message">
                    <div class="success-icon">
                        <i class="fas fa-check-circle"></i>
                    </div>
                    <h3>¡Correo Enviado!</h3>
                    <p>Hemos enviado las instrucciones de recuperación a tu correo electrónico.</p>
                    <div class="instructions">
                        <h4>Próximos pasos:</h4>
                        <ol>
                            <li>Revisa tu bandeja de entrada</li>
                            <li>Busca el correo de "Galería de Arte"</li>
                            <li>Sigue las instrucciones del correo</li>
                            <li>Si no lo encuentras, revisa tu carpeta de spam</li>
                        </ol>
                    </div>
                    <button @onclick="VolverAIntentar" class="btn btn-secondary">
                        <i class="fas fa-redo"></i>
                        Intentar con otro correo
                    </button>
                </div>
            }

            <div class="recovery-links">
                <a href="/login" class="link-secondary">
                    <i class="fas fa-arrow-left"></i>
                    Volver al Login
                </a>
                
                <div class="register-link">
                    <span>¿No tienes cuenta?</span>
                    <a href="/registro" class="link-primary">
                        <i class="fas fa-user-plus"></i>
                        Regístrate aquí
                    </a>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .recovery-container {
        min-height: 100vh;
        display: flex;
        align-items: center;
        justify-content: center;
        background: linear-gradient(135deg, #fa8142 0%, #ff6b6b 100%);
        padding: 20px;
    }

    .recovery-card {
        background: white;
        border-radius: 16px;
        box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
        width: 100%;
        max-width: 480px;
        overflow: hidden;
    }

    .recovery-header {
        background: linear-gradient(135deg, #fa8142 0%, #ff6b6b 100%);
        color: white;
        padding: 40px 30px;
        text-align: center;
    }

    .recovery-header h2 {
        margin: 0 0 10px 0;
        font-size: 28px;
        font-weight: 600;
    }

    .recovery-header p {
        margin: 0;
        opacity: 0.9;
        font-size: 16px;
    }

    .recovery-form {
        padding: 40px 30px;
    }

    .form-group {
        margin-bottom: 24px;
    }

    .form-group label {
        display: block;
        margin-bottom: 8px;
        font-weight: 500;
        color: #374151;
        font-size: 14px;
    }

    .form-control {
        width: 100%;
        padding: 12px 16px;
        border: 2px solid #e5e7eb;
        border-radius: 8px;
        font-size: 16px;
        transition: all 0.3s ease;
        box-sizing: border-box;
    }

    .form-control:focus {
        outline: none;
        border-color: #fa8142;
        box-shadow: 0 0 0 3px rgba(250, 129, 66, 0.1);
    }

    .help-text {
        margin-top: 4px;
    }

    .help-text small {
        color: #6b7280;
        font-size: 12px;
    }

    .btn-recovery {
        width: 100%;
        background: linear-gradient(135deg, #fa8142 0%, #ff6b6b 100%);
        border: none;
        padding: 14px 20px;
        border-radius: 8px;
        color: white;
        font-size: 16px;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.3s ease;
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 8px;
        margin-bottom: 24px;
    }

    .btn-recovery:hover:not(:disabled) {
        transform: translateY(-2px);
        box-shadow: 0 10px 20px rgba(250, 129, 66, 0.3);
    }

    .btn-recovery:disabled {
        opacity: 0.7;
        cursor: not-allowed;
        transform: none;
    }

    .success-message {
        text-align: center;
        padding: 20px 0;
    }

    .success-icon {
        font-size: 4rem;
        color: #16a34a;
        margin-bottom: 20px;
    }

    .success-message h3 {
        color: #374151;
        margin-bottom: 16px;
        font-size: 24px;
    }

    .success-message p {
        color: #6b7280;
        margin-bottom: 24px;
        font-size: 16px;
    }

    .instructions {
        background: #f9fafb;
        border-radius: 8px;
        padding: 20px;
        margin-bottom: 24px;
        text-align: left;
    }

    .instructions h4 {
        color: #374151;
        margin-bottom: 12px;
        font-size: 16px;
    }

    .instructions ol {
        color: #6b7280;
        font-size: 14px;
        padding-left: 20px;
    }

    .instructions li {
        margin-bottom: 8px;
    }

    .btn-secondary {
        background: #6b7280;
        border: none;
        padding: 12px 20px;
        border-radius: 8px;
        color: white;
        font-size: 14px;
        font-weight: 500;
        cursor: pointer;
        transition: all 0.3s ease;
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 8px;
        margin: 0 auto 24px auto;
    }

    .btn-secondary:hover {
        background: #4b5563;
        transform: translateY(-1px);
    }

    .recovery-links {
        text-align: center;
        border-top: 1px solid #e5e7eb;
        padding-top: 24px;
    }

    .recovery-links a {
        text-decoration: none;
        display: inline-flex;
        align-items: center;
        gap: 6px;
        font-size: 14px;
        font-weight: 500;
    }

    .link-secondary {
        color: #6b7280;
        margin-bottom: 16px;
        display: block;
    }

    .link-secondary:hover {
        color: #374151;
    }

    .register-link {
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 8px;
        font-size: 14px;
    }

    .register-link span {
        color: #6b7280;
    }

    .link-primary {
        color: #fa8142;
    }

    .link-primary:hover {
        color: #ff6b6b;
    }

    .alert {
        padding: 12px 16px;
        border-radius: 6px;
        margin-bottom: 20px;
        display: flex;
        align-items: center;
        gap: 8px;
        font-size: 14px;
    }

    .alert-danger {
        background-color: #fef2f2;
        color: #dc2626;
        border: 1px solid #fecaca;
    }

    .validation-message {
        color: #dc2626;
        font-size: 12px;
        margin-top: 4px;
    }
</style>

@code {
    private SolicitarRecuperacionRequest recuperacionRequest = new();
    private bool cargando = false;
    private bool solicitudEnviada = false;
    private string mensajeError = "";

    private async Task HandleSolicitarRecuperacion()
    {
        mensajeError = "";

        if (string.IsNullOrWhiteSpace(recuperacionRequest.Correo))
        {
            mensajeError = "Por favor, ingresa tu correo electrónico.";
            return;
        }

        if (!IsValidEmail(recuperacionRequest.Correo))
        {
            mensajeError = "Por favor, ingresa un correo electrónico válido.";
            return;
        }

        cargando = true;

        try
        {
            var resultado = await AuthService.SolicitarRecuperacionAsync(recuperacionRequest);
            
            if (resultado.Exito)
            {
                solicitudEnviada = true;
            }
            else
            {
                mensajeError = resultado.Mensaje;
            }
        }
        catch (Exception ex)
        {
            mensajeError = $"Error inesperado: {ex.Message}";
        }
        finally
        {
            cargando = false;
        }
    }

    private void VolverAIntentar()
    {
        solicitudEnviada = false;
        recuperacionRequest = new();
        mensajeError = "";
    }

    private bool IsValidEmail(string email)
    {
        try
        {
            var addr = new System.Net.Mail.MailAddress(email);
            return addr.Address == email;
        }
        catch
        {
            return false;
        }
    }
}
