@page "/artista/crear-obra"
@using GaleriaArteFrontend.Models
@using System.IO
@using GaleriaArteFrontend.Components
@using Microsoft.AspNetCore.Components.Forms
@inject GaleriaArteFrontend.Services.ObrasService ObrasService
@inject NavigationManager Navigation

@using GaleriaArteFrontend.Components

<AuthGuard RolRequerido="9a66346f-164e-4ce2-8e5b-568b8f643799">
    <h3>Subir Nueva Obra</h3>

    <button class="btn btn-secondary mb-3" @onclick="VolverAlPanel">
        <i class="bi bi-arrow-left"></i> Volver al Panel
    </button>

    <EditForm Model="obra" OnValidSubmit="HandleValidSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <div class="mb-3">
            <label for="titulo" class="form-label">Título</label>
            <InputText id="titulo" class="form-control" @bind-Value="obra.Titulo" />
        </div>
        <div class="mb-3">
            <label for="descripcion" class="form-label">Descripción</label>
            <InputTextArea id="descripcion" class="form-control" @bind-Value="obra.Descripcion" />
        </div>
        <div class="mb-3">
            <label for="precio" class="form-label">Precio</label>
            <InputNumber id="precio" class="form-control" @bind-Value="obra.Precio" />
        </div>
        <div class="mb-3">
            <label for="archivo" class="form-label">Imagen (JPG/JPEG)</label>
            <InputFile id="archivo" OnChange="OnInputFileChange" accept=".jpg,.jpeg" />
            @if (!string.IsNullOrEmpty(fileError))
            {
                <div class="text-danger">@fileError</div>
            }
        </div>
        <button class="btn btn-primary" type="submit" disabled="@(isSubmitting)">Subir Obra</button>
        @if (isSubmitting)
        {
            <span class="ms-2">Subiendo...</span>
        }
        @if (!string.IsNullOrEmpty(successMessage))
        {
            <div class="alert alert-success mt-3">@successMessage</div>
        }
        @if (!string.IsNullOrEmpty(errorMessage))
        {
            <div class="alert alert-danger mt-3">@errorMessage</div>
        }
    </EditForm>
</AuthGuard>

@code {
    private ObraCrearModel obra = new();
    private IBrowserFile? selectedFile;
    private string? fileError;
    private string? successMessage;
    private string? errorMessage;
    private bool isSubmitting = false;

    private async Task OnInputFileChange(InputFileChangeEventArgs e)
    {
        fileError = null;
        var file = e.File;
        if (file == null)
        {
            fileError = "Debes seleccionar una imagen.";
            selectedFile = null;
            return;
        }
        var ext = Path.GetExtension(file.Name).ToLower();
        if (ext != ".jpg" && ext != ".jpeg")
        {
            fileError = "Solo se permiten archivos JPG o JPEG.";
            selectedFile = null;
            return;
        }
        selectedFile = file;
    }

    private async Task HandleValidSubmit()
    {
        errorMessage = null;
        successMessage = null;
        if (selectedFile == null)
        {
            fileError = "Debes seleccionar una imagen JPG/JPEG.";
            return;
        }
        isSubmitting = true;
        try
        {
            var result = await ObrasService.CrearObraAsync(obra, selectedFile);
            if (result)
            {
                successMessage = "Obra subida exitosamente.";
                await Task.Delay(1200);
                Navigation.NavigateTo("/artista/panel");
            }
            else
            {
                errorMessage = "No se pudo subir la obra.";
            }
        }
        catch (Exception ex)
        {
            errorMessage = $"Error: {ex.Message}";
        }
        isSubmitting = false;
    }

    private void VolverAlPanel()
    {
        Navigation.NavigateTo("/artista/panel");
    }

    public class ObraCrearModel
    {
        public string Titulo { get; set; } = string.Empty;
        public string? Descripcion { get; set; }
        public decimal Precio { get; set; }
    }
}
